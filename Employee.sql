-- CREATE EXTENSION pgcrypto; --Allows PostgreSQL to understand UUIDs. Only have to create the extension once for a database.

--DROP TABLE product;

CREATE TABLE employee (
  id uuid NOT NULL DEFAULT gen_random_uuid(),
  first_name character varying(10) NOT NULL DEFAULT(''),
  last_name character varying(10) NOT NULL DEFAULT(''),
  employee_id int NOT NULL DEFAULT(0),
  active boolean NOT NULL,
  role character varying(32) NOT NULL CHECK (role in ('general manager','shift manager','cashier')),
  manager uuid,
  password character varying(12) NOT NULL,
  created_on timestamp without time zone NOT NULL DEFAULT now(),
  CONSTRAINT employee_pkey PRIMARY KEY (id),
  FOREIGN KEY (manager) REFERENCES employee (id)
) WITH (
  OIDS=FALSE
);

INSERT INTO employee (first_name, last_name, employee_id, active, role, manager, password) VALUES
('Jared', 'Ramirez', 1, '1', 'general manager', NULL, 'jramirez')
RETURNING id, created_on;

INSERT INTO employee (first_name, last_name, employee_id, active, role, manager, password) VALUES
('Ben', 'Clarke', 2, '1', 'shift manager', (SELECT id FROM employee WHERE employee_id = 1), 'bclarke')
RETURNING id, created_on;

INSERT INTO employee (first_name, last_name, employee_id, active, role, manager, password) VALUES
('Carlos', 'Interiano', 3, '1', 'cashier', (SELECT id FROM employee WHERE employee_id = 2), 'cinteriano')
RETURNING id, created_on;

INSERT INTO employee (first_name, last_name, employee_id, active, role, manager, password) VALUES
('John', 'Mangrum', 4, '1', 'cashier', (SELECT id FROM employee WHERE employee_id = 2), 'jmangrum')
RETURNING id, created_on;

INSERT INTO employee (first_name, last_name, employee_id, active, role, manager, password) VALUES
('Andrew', 'Foster', 5, '1', 'cashier', (SELECT id FROM employee WHERE employee_id = 1), 'afoster')
RETURNING id, created_on;

INSERT INTO employee (first_name, last_name, employee_id, active, role, manager, password) VALUES
('Brendan', 'Mitchell', 6, '1', 'cashier', (SELECT id FROM employee WHERE employee_id = 1), 'bmitchell')
RETURNING id, created_on;

--DROP INDEX ix_product_lookupcode;

-- CREATE INDEX ix_product_lookupcode --An index on the product table lookupcode column
--   ON product
--   USING btree
--   (lower(lookupcode::text) COLLATE pg_catalog."default"); --Index on the lower case of the lookup code. Queries for product by lookupcode should search using the lower case of the lookup code.

-- INSERT INTO product (lookupcode, count) VALUES ( --id and createdon are generated by default.
--        'lookupcode1'
--      , 100)
-- RETURNING id, createdon;
--
-- INSERT INTO product (lookupcode, count) VALUES (
--        'lookupcode2'
--      , 125)
-- RETURNING id, createdon;
--
-- INSERT INTO product (lookupcode, count) VALUES (
--        'lookupcode3'
--      , 150)
-- RETURNING id, createdon;

--SELECT * FROM product;

--DELETE FROM product;
